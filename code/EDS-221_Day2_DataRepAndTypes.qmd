---
title: "EDS-221_Day2_DataRepAndTypes"
author: "OP"
format: html
editor: visual
execute: 
  echo: false
  warning: false
---

## Making and indexing data in R

### Vectors

```{r}
dogs <- c("teddy", "knora", "waffle", "banjo", "tallie", "shery")

# --- check class of dogs
typeof(dogs)
class(dogs)
```

```{r}
myBreakfast <- c("waffles", 2, TRUE, "coffee")

typeof(myBreakfast)
```

```{r}
weights <- c(50, 60, 25, 35, 55)
typeof(weights)
class(weights)
```

```{r}
weights_integer <- c(50L, 60L, 25L, 35L, 55L)
typeof(weights_integer)
class(weights_integer)
```

```{r}

zipcodes <- c(93105, 93104, 93101, 93401)

class(zipcodes)

# --- Use as. family of functions to recast a type from one type to another type
# --- Use is. family of functions to ASK a type what class something is
zipcodes_chr <- as.character(zipcodes)

```

### Create a vector with named elements

```{r}
dog_food <- c(teddy = "purina", knora = "alpo", waffle = "fancy feast", banjo = "blue diamond", tallie = "farmer's dog")
class(dog_food)

test <- c(cat = 4, dog = 10, elephant = 11)
class(test)
typeof(test)
```

```{r}
# --- access a value of the element in the vector
# --- R uses 1-index (IMPORTANT diff with other languages)

dog_food[2]
dog_food["knora"]
```

### Access ranges of values in a vector

Use: to refer to a range (low : high)

```{r}
trees <- c("ponderosa", "lodgepole", "jeffrey", "sugar", "white", "bristlecone", "redwood", "oak")
trees[3]
trees[3:5]
```

### Warm-up for "for loops"

```{r}
i <- 4
trees [i]

```

```{r}
# --- same thing as seq(from = 1 to = 3)
i <- seq(from = 1, to = 3)
trees[i]
```

```{r}
trees[3] <- "maple"
trees
```

```{r}
library(tidyverse)
library(palmerpenguins)
```

```{r}
# --- data frame with two columns and each vector has 3 elements

dogs <- data.frame(name = c("teddy", "banjo", "waffle"), age = c(5, 8, 2))
dogs

# --- Get Banjo's age (row 2 , column 2)
dogs[2,2]

# --- Get a name of a given vector position

dogs$name[2]
dogs$age[2]
```

```{r}
# --- Get a value for a given element using a filter

waffle_age <- dogs[dogs$name == "waffle",]$age
waffle_age

```

### Matrix indexing

```{r}

fish_size <- matrix(c(0.8, 1.2, 0.4, 0.9), ncol = 2, nrow = 2, byrow = FALSE)

fish_size
class(fish_size)
typeof(fish_size)
str(fish_size)

# --- Get an element in the position A22
fish_size[2,2]

# --- Get all elements in colum #2
fish_size[, 2]
```

### Create Lists

```{r}

urchins <- list("blue", c(1, 2, 3), c("lunch", "dinner", "desert"), 5L)
urchins

urchins$values # REVIEW
# expected 1, 2, 3

```

```{r}
urchins_list <- urchins[2]

urchins_vector <- urchins[[2]]

```

```{r}
sample1 <- c(1,2,3,4,5,3,2,4,1)
sample2 <- c(3,4,1,6,7,4,8,9,0)

ttest_example <- t.test(sample1, sample2)

ttest_example$p.value
```
